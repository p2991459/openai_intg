from django.db import models

# Create your models here.

class patients(models.Model):
    #id = models.AutoField(primary_key=True)
    uuid = models.CharField(null=True, blank=True,max_length=115)
    birthdate = models.DateField(null=True)
    deathdate = models.DateField(null=True, blank=True)
    ssn = models.CharField(max_length=11,null=True)
    drivers = models.CharField(max_length=9,null=True)
    passport = models.CharField(max_length=11,null=True)
    prefix = models.CharField(max_length=3,null=True)
    first = models.CharField(max_length=30,null=True)
    last = models.CharField(max_length=30,null=True)
    suffix = models.CharField(max_length=10, null=True, blank=True)
    maiden = models.CharField(max_length=30, null=True, blank=True)
    marital = models.CharField(max_length=1,null=True)
    race = models.CharField(max_length=5,null=True)
    ethnicity = models.CharField(max_length=12,null=True)
    gender = models.CharField(max_length=1,null=True)
    birthplace = models.CharField(max_length=100,null=True)
    address = models.CharField(max_length=100,null=True)
    city = models.CharField(max_length=30,null=True)
    state = models.CharField(max_length=30,null=True)
    county = models.CharField(max_length=30,null=True)
    zip = models.CharField(max_length=5,null=True)
    lat = models.FloatField(null=True)
    lon = models.FloatField(null=True)
    healthcare_expenses = models.FloatField(null=True)
    healthcare_coverage = models.FloatField(null=True)

class allergy(models.Model):
    start = models.DateField(null=True)
    stop = models.DateField(null=True, blank=True)
    patient = models.CharField(max_length=110,null=True)
    encounter = models.CharField(max_length=110,null=True)
    code = models.CharField(max_length=20,null=True)
    description = models.CharField(max_length=100,null=True)


class medication(models.Model):
    start = models.DateTimeField(null=True)
    stop = models.DateTimeField(null=True)
    patient = models.CharField(max_length=55,null=True)
    payer = models.CharField(max_length=55,null=True)
    encounter = models.CharField(max_length=55,null=True)
    code = models.IntegerField(null=True)
    description = models.CharField(max_length=100,null=True)
    base_cost = models.DecimalField(max_digits=10, decimal_places=2,null=True)
    payer_coverage = models.DecimalField(max_digits=10, decimal_places=2,null=True)
    dispensers = models.PositiveSmallIntegerField(null=True)
    total_cost = models.DecimalField(max_digits=10, decimal_places=2,null=True)
    reason_code = models.CharField(max_length=20, blank=True, null=True)
    reason_description = models.CharField(max_length=100, blank=True, null=True)

class careplan(models.Model):
    uuid = models.CharField(max_length=55,null=True)
    start = models.DateField(null=True)
    stop = models.DateField(null=True)
    patient = models.CharField(max_length=55,null=True)
    encounter = models.CharField(max_length=55,null=True)
    code = models.CharField(max_length=8,null=True)
    description = models.CharField(max_length=255,null=True)
    reason_code = models.CharField(max_length=8,null=True)
    reason_description = models.CharField(max_length=255,null=True)

class condition(models.Model):
    start = models.DateField(null=True)
    stop = models.DateField(null=True, blank=True)
    patient = models.CharField(max_length=55,null=True)
    encounter = models.CharField(max_length=55,null=True)
    code = models.CharField(max_length=20,null=True)
    description = models.CharField(max_length=100,null=True)

class device(models.Model):
    start = models.DateTimeField(null=True)
    stop = models.DateTimeField(null=True, blank=True)
    patient = models.CharField(max_length=100,null=True)
    encounter = models.CharField(max_length=100,null=True)
    code = models.CharField(max_length=20,null=True)
    description = models.CharField(max_length=200,null=True)
    udi = models.CharField(max_length=150,null=True)

class encounter(models.Model):
    uuid = models.CharField(max_length=20,null=True)
    start = models.DateTimeField(null=True)
    stop = models.DateTimeField(null=True)
    patient = models.CharField(max_length=50,null=True)
    organization = models.CharField(max_length=50,null=True)
    provider = models.CharField(max_length=50,null=True)
    payer = models.CharField(max_length=50,null=True)
    encounter_class = models.CharField(max_length=20,null=True)
    code = models.CharField(max_length=20,null=True)
    description = models.CharField(max_length=100,null=True)
    base_encounter_cost = models.DecimalField(max_digits=10, decimal_places=2,null=True)
    total_claim_cost = models.DecimalField(max_digits=10, decimal_places=2,null=True)
    payer_coverage = models.DecimalField(max_digits=10, decimal_places=2,null=True)
    reason_code = models.CharField(max_length=20, null=True, blank=True)
    reason_description = models.CharField(max_length=100, null=True, blank=True)

class imaging_studies(models.Model):
    uuid = models.CharField(max_length=55,null=True)
    date = models.DateTimeField(null=True)
    patient = models.CharField(max_length=55,null=True)
    encounter = models.CharField(max_length=55,null=True)
    body_site_code = models.PositiveIntegerField(null=True)
    body_site_description = models.CharField(max_length=255,null=True)
    modality_code = models.CharField(max_length=255,null=True)
    modality_description = models.CharField(max_length=255,null=True)
    sop_code = models.CharField(max_length=255,null=True)
    sop_description = models.CharField(max_length=255,null=True)

class immunization(models.Model):
    date = models.DateTimeField(null=True)
    patient = models.CharField(max_length=36,null=True)
    encounter = models.CharField(max_length=36,null=True)
    code = models.PositiveIntegerField(null=True)
    description = models.CharField(max_length=100,null=True)
    base_cost = models.FloatField(null=True)

class observations(models.Model):
    date = models.DateTimeField(null=True)
    patient = models.CharField(max_length=36,null=True)
    encounter = models.CharField(max_length=36,null=True)
    code = models.CharField(max_length=16,null=True)
    description = models.CharField(max_length=100,null=True)
    value = models.CharField(max_length=20,null=True)
    units = models.CharField(max_length=10,null=True)
    type = models.CharField(max_length=16,null=True)

class organizations(models.Model):
    uuid = models.CharField(max_length=100,null=True)
    name = models.CharField(max_length=100,null=True)
    address = models.CharField(max_length=100,null=True)
    city = models.CharField(max_length=50,null=True)
    state = models.CharField(max_length=2,null=True)
    zip = models.CharField(max_length=10,null=True)
    lat = models.FloatField(null=True)
    lon = models.FloatField(null=True)
    phone = models.CharField(max_length=15,null=True)
    revenue = models.FloatField(null=True)
    utilization = models.IntegerField(null=True)

class payer_transitions(models.Model):
    patient = models.CharField(max_length=36,null=True)
    start_year = models.PositiveSmallIntegerField(null=True)
    end_year = models.PositiveSmallIntegerField(null=True)
    payer = models.CharField(max_length=36,null=True)
    ownership = models.CharField(max_length=10,null=True)

class payers(models.Model):
    uuid = models.CharField(max_length=36,null=True)
    name = models.CharField(max_length=100,null=True)
    address = models.CharField(max_length=200,null=True)
    city = models.CharField(max_length=100,null=True)
    state_headquartered = models.CharField(max_length=100,null=True)
    zip = models.CharField(max_length=20,null=True)
    phone = models.CharField(max_length=20,null=True)
    amount_covered = models.FloatField(null=True)
    amount_uncovered = models.FloatField(null=True)
    revenue = models.FloatField(null=True)
    covered_encounters = models.PositiveIntegerField(null=True)
    uncovered_encounters = models.PositiveIntegerField(null=True)
    covered_medications = models.PositiveIntegerField(null=True)
    uncovered_medications = models.PositiveIntegerField(null=True)
    covered_procedures = models.PositiveIntegerField(null=True)
    uncovered_procedures = models.PositiveIntegerField(null=True)
    covered_immunizations = models.PositiveIntegerField(null=True)
    uncovered_immunizations = models.PositiveIntegerField(null=True)
    unique_customers = models.PositiveIntegerField(null=True)
    qols_avg = models.FloatField(null=True)
    member_months = models.PositiveIntegerField(null=True)

class procedure(models.Model):
    date = models.DateTimeField(auto_now=False, auto_now_add=False,null=True)
    patient = models.CharField(max_length=36,null=True)
    encounter = models.CharField(max_length=36,null=True)
    code = models.CharField(max_length=36,null=True)
    description = models.CharField(max_length=255,null=True)
    base_cost = models.FloatField(null=True)
    reasoncode = models.CharField(max_length=36, null=True, blank=True)
    reasondescription = models.CharField(max_length=255, null=True, blank=True)

class provider(models.Model):
    uuid = models.CharField(max_length=36,null=True)
    organization = models.CharField(max_length=36,null=True)
    name = models.CharField(max_length=50,null=True)
    gender = models.CharField(max_length=1,null=True)
    speciality = models.CharField(max_length=50,null=True)
    address = models.CharField(max_length=100,null=True)
    city = models.CharField(max_length=50,null=True)
    state = models.CharField(max_length=50,null=True)
    zip = models.CharField(max_length=10,null=True)
    lat = models.FloatField(null=True)
    lon = models.FloatField(null=True)
    utilization = models.PositiveIntegerField(null=True)

class supplies(models.Model):
    date = models.DateTimeField(null=True)
    patient = models.CharField(max_length=36,null=True)
    encounter = models.CharField(max_length=36,null=True)
    code = models.CharField(max_length=36,null=True)
    description = models.TextField(null=True)
    quantity = models.FloatField(null=True)
